{
  "contractName": "ERC721",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "address_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "address_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"address_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"address_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ERC721.sol\":{\"keccak256\":\"0x3403bac0d2ddb8848b20d7d56b59c277ecfb92fdaf3fb63e751b8da250825af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dafe104dc41f1ae8a6f6f1619517a1ea26807a4c94415bea224ba6144190b41\",\"dweb:/ipfs/QmXYh76io2FkmKUPARWtxPDzhmLVQUYKvitVHtRR8evv5B\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610280806100206000396000f3fe608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504636352211e811461005757806370a0823114610094575b600080fd5b61006a6100653660046101f4565b6100b5565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100a76100a236600461020d565b61014c565b60405190815260200161008b565b60008181526020819052604081205473ffffffffffffffffffffffffffffffffffffffff1680610146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f7468726f77696e6720796f75206675636b696e67206f75742c206d617465203260448201526064015b60405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82166101cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f7468726f77696e6720796f75206675636b696e67206f75742c206d6174650000604482015260640161013d565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b60006020828403121561020657600080fd5b5035919050565b60006020828403121561021f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461024357600080fd5b939250505056fea26469706673582212204340aed4fc7dd4a0dad8e8036065f2adc597eb2fddb06efc3b91946e8efed87764736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504636352211e811461005757806370a0823114610094575b600080fd5b61006a6100653660046101f4565b6100b5565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100a76100a236600461020d565b61014c565b60405190815260200161008b565b60008181526020819052604081205473ffffffffffffffffffffffffffffffffffffffff1680610146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f7468726f77696e6720796f75206675636b696e67206f75742c206d617465203260448201526064015b60405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82166101cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f7468726f77696e6720796f75206675636b696e67206f75742c206d6174650000604482015260640161013d565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b60006020828403121561020657600080fd5b5035919050565b60006020828403121561021f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461024357600080fd5b939250505056fea26469706673582212204340aed4fc7dd4a0dad8e8036065f2adc597eb2fddb06efc3b91946e8efed87764736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nativeSrc": "0:1643:6",
        "nodeType": "YulBlock",
        "src": "0:1643:6",
        "statements": [
          {
            "nativeSrc": "6:3:6",
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nativeSrc": "84:110:6",
              "nodeType": "YulBlock",
              "src": "84:110:6",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "130:16:6",
                    "nodeType": "YulBlock",
                    "src": "130:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "139:1:6",
                              "nodeType": "YulLiteral",
                              "src": "139:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "142:1:6",
                              "nodeType": "YulLiteral",
                              "src": "142:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "132:6:6",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:6"
                          },
                          "nativeSrc": "132:12:6",
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:6"
                        },
                        "nativeSrc": "132:12:6",
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "105:7:6",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:6"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "114:9:6",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "101:3:6",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:6"
                        },
                        "nativeSrc": "101:23:6",
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "126:2:6",
                        "nodeType": "YulLiteral",
                        "src": "126:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "97:3:6",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:6"
                    },
                    "nativeSrc": "97:32:6",
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:6"
                  },
                  "nativeSrc": "94:52:6",
                  "nodeType": "YulIf",
                  "src": "94:52:6"
                },
                {
                  "nativeSrc": "155:33:6",
                  "nodeType": "YulAssignment",
                  "src": "155:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "178:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "165:12:6",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:6"
                    },
                    "nativeSrc": "165:23:6",
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "155:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nativeSrc": "14:180:6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "50:9:6",
                "nodeType": "YulTypedName",
                "src": "50:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "61:7:6",
                "nodeType": "YulTypedName",
                "src": "61:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "73:6:6",
                "nodeType": "YulTypedName",
                "src": "73:6:6",
                "type": ""
              }
            ],
            "src": "14:180:6"
          },
          {
            "body": {
              "nativeSrc": "300:125:6",
              "nodeType": "YulBlock",
              "src": "300:125:6",
              "statements": [
                {
                  "nativeSrc": "310:26:6",
                  "nodeType": "YulAssignment",
                  "src": "310:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "322:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "333:2:6",
                        "nodeType": "YulLiteral",
                        "src": "333:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "318:3:6",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:6"
                    },
                    "nativeSrc": "318:18:6",
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "310:4:6",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "352:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nativeSrc": "367:6:6",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:6"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "375:42:6",
                            "nodeType": "YulLiteral",
                            "src": "375:42:6",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nativeSrc": "363:3:6",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:6"
                        },
                        "nativeSrc": "363:55:6",
                        "nodeType": "YulFunctionCall",
                        "src": "363:55:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "345:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:6"
                    },
                    "nativeSrc": "345:74:6",
                    "nodeType": "YulFunctionCall",
                    "src": "345:74:6"
                  },
                  "nativeSrc": "345:74:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "345:74:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nativeSrc": "199:226:6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "269:9:6",
                "nodeType": "YulTypedName",
                "src": "269:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "280:6:6",
                "nodeType": "YulTypedName",
                "src": "280:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "291:4:6",
                "nodeType": "YulTypedName",
                "src": "291:4:6",
                "type": ""
              }
            ],
            "src": "199:226:6"
          },
          {
            "body": {
              "nativeSrc": "500:239:6",
              "nodeType": "YulBlock",
              "src": "500:239:6",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "546:16:6",
                    "nodeType": "YulBlock",
                    "src": "546:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "555:1:6",
                              "nodeType": "YulLiteral",
                              "src": "555:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "558:1:6",
                              "nodeType": "YulLiteral",
                              "src": "558:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "548:6:6",
                            "nodeType": "YulIdentifier",
                            "src": "548:6:6"
                          },
                          "nativeSrc": "548:12:6",
                          "nodeType": "YulFunctionCall",
                          "src": "548:12:6"
                        },
                        "nativeSrc": "548:12:6",
                        "nodeType": "YulExpressionStatement",
                        "src": "548:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "521:7:6",
                            "nodeType": "YulIdentifier",
                            "src": "521:7:6"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "530:9:6",
                            "nodeType": "YulIdentifier",
                            "src": "530:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "517:3:6",
                          "nodeType": "YulIdentifier",
                          "src": "517:3:6"
                        },
                        "nativeSrc": "517:23:6",
                        "nodeType": "YulFunctionCall",
                        "src": "517:23:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "542:2:6",
                        "nodeType": "YulLiteral",
                        "src": "542:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "513:3:6",
                      "nodeType": "YulIdentifier",
                      "src": "513:3:6"
                    },
                    "nativeSrc": "513:32:6",
                    "nodeType": "YulFunctionCall",
                    "src": "513:32:6"
                  },
                  "nativeSrc": "510:52:6",
                  "nodeType": "YulIf",
                  "src": "510:52:6"
                },
                {
                  "nativeSrc": "571:36:6",
                  "nodeType": "YulVariableDeclaration",
                  "src": "571:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "597:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "597:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "584:12:6",
                      "nodeType": "YulIdentifier",
                      "src": "584:12:6"
                    },
                    "nativeSrc": "584:23:6",
                    "nodeType": "YulFunctionCall",
                    "src": "584:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nativeSrc": "575:5:6",
                      "nodeType": "YulTypedName",
                      "src": "575:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "693:16:6",
                    "nodeType": "YulBlock",
                    "src": "693:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "702:1:6",
                              "nodeType": "YulLiteral",
                              "src": "702:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "705:1:6",
                              "nodeType": "YulLiteral",
                              "src": "705:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "695:6:6",
                            "nodeType": "YulIdentifier",
                            "src": "695:6:6"
                          },
                          "nativeSrc": "695:12:6",
                          "nodeType": "YulFunctionCall",
                          "src": "695:12:6"
                        },
                        "nativeSrc": "695:12:6",
                        "nodeType": "YulExpressionStatement",
                        "src": "695:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "629:5:6",
                            "nodeType": "YulIdentifier",
                            "src": "629:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "640:5:6",
                                "nodeType": "YulIdentifier",
                                "src": "640:5:6"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "647:42:6",
                                "nodeType": "YulLiteral",
                                "src": "647:42:6",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "636:3:6",
                              "nodeType": "YulIdentifier",
                              "src": "636:3:6"
                            },
                            "nativeSrc": "636:54:6",
                            "nodeType": "YulFunctionCall",
                            "src": "636:54:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nativeSrc": "626:2:6",
                          "nodeType": "YulIdentifier",
                          "src": "626:2:6"
                        },
                        "nativeSrc": "626:65:6",
                        "nodeType": "YulFunctionCall",
                        "src": "626:65:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "619:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "619:6:6"
                    },
                    "nativeSrc": "619:73:6",
                    "nodeType": "YulFunctionCall",
                    "src": "619:73:6"
                  },
                  "nativeSrc": "616:93:6",
                  "nodeType": "YulIf",
                  "src": "616:93:6"
                },
                {
                  "nativeSrc": "718:15:6",
                  "nodeType": "YulAssignment",
                  "src": "718:15:6",
                  "value": {
                    "name": "value",
                    "nativeSrc": "728:5:6",
                    "nodeType": "YulIdentifier",
                    "src": "728:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "718:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "718:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nativeSrc": "430:309:6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "466:9:6",
                "nodeType": "YulTypedName",
                "src": "466:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "477:7:6",
                "nodeType": "YulTypedName",
                "src": "477:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "489:6:6",
                "nodeType": "YulTypedName",
                "src": "489:6:6",
                "type": ""
              }
            ],
            "src": "430:309:6"
          },
          {
            "body": {
              "nativeSrc": "845:76:6",
              "nodeType": "YulBlock",
              "src": "845:76:6",
              "statements": [
                {
                  "nativeSrc": "855:26:6",
                  "nodeType": "YulAssignment",
                  "src": "855:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "867:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "867:9:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "878:2:6",
                        "nodeType": "YulLiteral",
                        "src": "878:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "863:3:6",
                      "nodeType": "YulIdentifier",
                      "src": "863:3:6"
                    },
                    "nativeSrc": "863:18:6",
                    "nodeType": "YulFunctionCall",
                    "src": "863:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "855:4:6",
                      "nodeType": "YulIdentifier",
                      "src": "855:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "897:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "897:9:6"
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "908:6:6",
                        "nodeType": "YulIdentifier",
                        "src": "908:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "890:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "890:6:6"
                    },
                    "nativeSrc": "890:25:6",
                    "nodeType": "YulFunctionCall",
                    "src": "890:25:6"
                  },
                  "nativeSrc": "890:25:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "890:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nativeSrc": "744:177:6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "814:9:6",
                "nodeType": "YulTypedName",
                "src": "814:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "825:6:6",
                "nodeType": "YulTypedName",
                "src": "825:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "836:4:6",
                "nodeType": "YulTypedName",
                "src": "836:4:6",
                "type": ""
              }
            ],
            "src": "744:177:6"
          },
          {
            "body": {
              "nativeSrc": "1100:182:6",
              "nodeType": "YulBlock",
              "src": "1100:182:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1117:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "1117:9:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1128:2:6",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1110:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "1110:6:6"
                    },
                    "nativeSrc": "1110:21:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1110:21:6"
                  },
                  "nativeSrc": "1110:21:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "1110:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1151:9:6",
                            "nodeType": "YulIdentifier",
                            "src": "1151:9:6"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "1162:2:6",
                            "nodeType": "YulLiteral",
                            "src": "1162:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "1147:3:6",
                          "nodeType": "YulIdentifier",
                          "src": "1147:3:6"
                        },
                        "nativeSrc": "1147:18:6",
                        "nodeType": "YulFunctionCall",
                        "src": "1147:18:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1167:2:6",
                        "nodeType": "YulLiteral",
                        "src": "1167:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1140:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "1140:6:6"
                    },
                    "nativeSrc": "1140:30:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1140:30:6"
                  },
                  "nativeSrc": "1140:30:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "1140:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1190:9:6",
                            "nodeType": "YulIdentifier",
                            "src": "1190:9:6"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "1201:2:6",
                            "nodeType": "YulLiteral",
                            "src": "1201:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "1186:3:6",
                          "nodeType": "YulIdentifier",
                          "src": "1186:3:6"
                        },
                        "nativeSrc": "1186:18:6",
                        "nodeType": "YulFunctionCall",
                        "src": "1186:18:6"
                      },
                      {
                        "hexValue": "7468726f77696e6720796f75206675636b696e67206f75742c206d6174652032",
                        "kind": "string",
                        "nativeSrc": "1206:34:6",
                        "nodeType": "YulLiteral",
                        "src": "1206:34:6",
                        "type": "",
                        "value": "throwing you fucking out, mate 2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1179:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:6"
                    },
                    "nativeSrc": "1179:62:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1179:62:6"
                  },
                  "nativeSrc": "1179:62:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "1179:62:6"
                },
                {
                  "nativeSrc": "1250:26:6",
                  "nodeType": "YulAssignment",
                  "src": "1250:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1262:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "1262:9:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1273:2:6",
                        "nodeType": "YulLiteral",
                        "src": "1273:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "1258:3:6",
                      "nodeType": "YulIdentifier",
                      "src": "1258:3:6"
                    },
                    "nativeSrc": "1258:18:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1258:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "1250:4:6",
                      "nodeType": "YulIdentifier",
                      "src": "1250:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5be4f4ab89f5275c38d0357877e2ec277bcf64481192cac745844ff1050a30df__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "926:356:6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "1077:9:6",
                "nodeType": "YulTypedName",
                "src": "1077:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "1091:4:6",
                "nodeType": "YulTypedName",
                "src": "1091:4:6",
                "type": ""
              }
            ],
            "src": "926:356:6"
          },
          {
            "body": {
              "nativeSrc": "1461:180:6",
              "nodeType": "YulBlock",
              "src": "1461:180:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1478:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "1478:9:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1489:2:6",
                        "nodeType": "YulLiteral",
                        "src": "1489:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1471:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "1471:6:6"
                    },
                    "nativeSrc": "1471:21:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1471:21:6"
                  },
                  "nativeSrc": "1471:21:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "1471:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1512:9:6",
                            "nodeType": "YulIdentifier",
                            "src": "1512:9:6"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "1523:2:6",
                            "nodeType": "YulLiteral",
                            "src": "1523:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "1508:3:6",
                          "nodeType": "YulIdentifier",
                          "src": "1508:3:6"
                        },
                        "nativeSrc": "1508:18:6",
                        "nodeType": "YulFunctionCall",
                        "src": "1508:18:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1528:2:6",
                        "nodeType": "YulLiteral",
                        "src": "1528:2:6",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1501:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "1501:6:6"
                    },
                    "nativeSrc": "1501:30:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1501:30:6"
                  },
                  "nativeSrc": "1501:30:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "1501:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1551:9:6",
                            "nodeType": "YulIdentifier",
                            "src": "1551:9:6"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "1562:2:6",
                            "nodeType": "YulLiteral",
                            "src": "1562:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "1547:3:6",
                          "nodeType": "YulIdentifier",
                          "src": "1547:3:6"
                        },
                        "nativeSrc": "1547:18:6",
                        "nodeType": "YulFunctionCall",
                        "src": "1547:18:6"
                      },
                      {
                        "hexValue": "7468726f77696e6720796f75206675636b696e67206f75742c206d617465",
                        "kind": "string",
                        "nativeSrc": "1567:32:6",
                        "nodeType": "YulLiteral",
                        "src": "1567:32:6",
                        "type": "",
                        "value": "throwing you fucking out, mate"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1540:6:6",
                      "nodeType": "YulIdentifier",
                      "src": "1540:6:6"
                    },
                    "nativeSrc": "1540:60:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1540:60:6"
                  },
                  "nativeSrc": "1540:60:6",
                  "nodeType": "YulExpressionStatement",
                  "src": "1540:60:6"
                },
                {
                  "nativeSrc": "1609:26:6",
                  "nodeType": "YulAssignment",
                  "src": "1609:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1621:9:6",
                        "nodeType": "YulIdentifier",
                        "src": "1621:9:6"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1632:2:6",
                        "nodeType": "YulLiteral",
                        "src": "1632:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "1617:3:6",
                      "nodeType": "YulIdentifier",
                      "src": "1617:3:6"
                    },
                    "nativeSrc": "1617:18:6",
                    "nodeType": "YulFunctionCall",
                    "src": "1617:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "1609:4:6",
                      "nodeType": "YulIdentifier",
                      "src": "1609:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_91a5015ec638e0db8011a4da71788e6473fcce9b45fa2e4994ed0b0992fac4a7__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "1287:354:6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "1438:9:6",
                "nodeType": "YulTypedName",
                "src": "1438:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "1452:4:6",
                "nodeType": "YulTypedName",
                "src": "1452:4:6",
                "type": ""
              }
            ],
            "src": "1287:354:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_5be4f4ab89f5275c38d0357877e2ec277bcf64481192cac745844ff1050a30df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"throwing you fucking out, mate 2\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_91a5015ec638e0db8011a4da71788e6473fcce9b45fa2e4994ed0b0992fac4a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"throwing you fucking out, mate\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:1726:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "61:1726:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:221;;;;;;:::i;:::-;;:::i;:::-;;;375:42:6;363:55;;;345:74;;333:2;318:18;1559:221:0;;;;;;;;1095:191;;;;;;:::i;:::-;;:::i;:::-;;;890:25:6;;;878:2;863:18;1095:191:0;744:177:6;1559:221:0;1617:7;1653:21;;;;;;;;;;;;;;1685:64;;;;;;;1128:2:6;1685:64:0;;;1110:21:6;;;1147:18;;;1140:30;1206:34;1186:18;;;1179:62;1258:18;;1685:64:0;;;;;;;;;1767:5;1559:221;-1:-1:-1;;1559:221:0:o;1095:191::-;1152:7;1180:20;;;1172:63;;;;;;;1489:2:6;1172:63:0;;;1471:21:6;1528:2;1508:18;;;1501:30;1567:32;1547:18;;;1540:60;1617:18;;1172:63:0;1287:354:6;1172:63:0;-1:-1:-1;1253:25:0;;;;;;:17;:25;;;;;;;1095:191::o;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;430:309::-;489:6;542:2;530:9;521:7;517:23;513:32;510:52;;;558:1;555;548:12;510:52;597:9;584:23;647:42;640:5;636:54;629:5;626:65;616:93;;705:1;702;695:12;616:93;728:5;430:309;-1:-1:-1;;;430:309:6:o",
  "source": "// SPDX-License-Identifier: MIT \r\npragma solidity ^0.8.0;\r\n\r\ncontract ERC721 {\r\n\r\n    event Transfer\r\n    (\r\n        address indexed address_from,\r\n        address indexed address_to,\r\n        uint256 indexed tokenId\r\n    );\r\n\r\n    mapping(uint256 => address) private _tokenOwner;\r\n    mapping(address => uint256) private _OwnedTokensCount;\r\n\r\n    function _mint(address address_to, uint256 tokenId) internal virtual {\r\n        require(address_to != address(0), \"invalid mint address fucket\");\r\n        require(_tokenOwner[tokenId] == address(0), \"you are late mate, token already minted\");\r\n\r\n        _tokenOwner[tokenId] = address_to;\r\n        _OwnedTokensCount[address_to] +=1;\r\n\r\n        emit Transfer(address(0), address_to, tokenId);\r\n    }\r\n    \r\n    \r\n    /// @notice Count all NFTs assigned to an owner\r\n    /// @dev NFTs assigned to the zero address are considered invalid, and this\r\n    ///  function throws for queries about the zero address.\r\n    /// @param _owner An address for whom to query the balance\r\n    /// @return The number of NFTs owned by `_owner`, possibly zero\r\n\r\n    function balanceOf(address _owner) external view returns(uint256) {\r\n        require(_owner != address(0), \"throwing you fucking out, mate\");\r\n        return _OwnedTokensCount[_owner];\r\n    }\r\n\r\n\r\n\r\n    /// @notice Find the owner of an NFT\r\n    /// @dev NFTs assigned to zero address are considered invalid, and queries\r\n    ///  about them do throw.\r\n    /// @param _tokenId The identifier for an NFT\r\n    /// @return The address of the owner of the NFT\r\n\r\n\r\n    function ownerOf(uint256 _tokenId) external view returns (address) {\r\n        address owner = _tokenOwner[_tokenId];\r\n        require(owner != address(0), \"throwing you fucking out, mate 2\");\r\n        return owner;\r\n    }\r\n\r\n\r\n}\r\n\r\n",
  "sourcePath": "C:\\Users\\hector\\OneDrive\\Escritorio\\nft_marketplace repo\\nft-marketplace-starter-kit\\src\\contracts\\ERC721.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/ERC721.sol",
    "exportedSymbols": {
      "ERC721": [
        119
      ]
    },
    "id": 120,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 119,
        "linearizedBaseContracts": [
          119
        ],
        "name": "ERC721",
        "nameLocation": "70:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 9,
            "name": "Transfer",
            "nameLocation": "92:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "address_from",
                  "nameLocation": "133:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "117:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "117:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "address_to",
                  "nameLocation": "172:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "156:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "209:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "193:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "106:117:0"
            },
            "src": "86:138:0"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "_tokenOwner",
            "nameLocation": "268:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 119,
            "src": "232:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 12,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 10,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "240:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "232:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "251:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "_OwnedTokensCount",
            "nameLocation": "322:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 119,
            "src": "286:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "294:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "286:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "305:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "417:329:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25,
                          "name": "address_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "436:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 28,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "458:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "450:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "450:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "450:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "436:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206d696e742061646472657373206675636b6574",
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "462:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_013cfd25df7ee72c550c90026c7c775ccfed0224008ecae2be771a721a78916b",
                          "typeString": "literal_string \"invalid mint address fucket\""
                        },
                        "value": "invalid mint address fucket"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_013cfd25df7ee72c550c90026c7c775ccfed0224008ecae2be771a721a78916b",
                          "typeString": "literal_string \"invalid mint address fucket\""
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "428:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "428:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 35,
                            "name": "_tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "511:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 37,
                          "indexExpression": {
                            "id": 36,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "523:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "511:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "543:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 39,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "535:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "535:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "535:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "511:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520617265206c617465206d6174652c20746f6b656e20616c7265616479206d696e746564",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "547:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d6887c5c94d800ce4d63cbf687448670f0aec8d76a7f65e4ac7772eed9d939a",
                          "typeString": "literal_string \"you are late mate, token already minted\""
                        },
                        "value": "you are late mate, token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d6887c5c94d800ce4d63cbf687448670f0aec8d76a7f65e4ac7772eed9d939a",
                          "typeString": "literal_string \"you are late mate, token already minted\""
                        }
                      ],
                      "id": 34,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "503:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "503:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "503:86:0"
                },
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "602:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "id": 47,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "614:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "602:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49,
                      "name": "address_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "625:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "602:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "602:33:0"
                },
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 52,
                        "name": "_OwnedTokensCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "646:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 54,
                      "indexExpression": {
                        "id": 53,
                        "name": "address_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "664:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "646:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "678:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "646:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "646:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "714:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "706:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "706:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "706:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63,
                        "name": "address_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "718:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "730:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "697:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "EmitStatement",
                  "src": "692:46:0"
                }
              ]
            },
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "357:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "address_to",
                  "nameLocation": "371:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "363:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "391:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "383:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "362:37:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:0"
            },
            "scope": 119,
            "src": "348:398:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1161:125:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1180:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1198:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1190:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1190:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1190:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1180:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726f77696e6720796f75206675636b696e67206f75742c206d617465",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1202:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_91a5015ec638e0db8011a4da71788e6473fcce9b45fa2e4994ed0b0992fac4a7",
                          "typeString": "literal_string \"throwing you fucking out, mate\""
                        },
                        "value": "throwing you fucking out, mate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_91a5015ec638e0db8011a4da71788e6473fcce9b45fa2e4994ed0b0992fac4a7",
                          "typeString": "literal_string \"throwing you fucking out, mate\""
                        }
                      ],
                      "id": 76,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1172:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:63:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 86,
                      "name": "_OwnedTokensCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1253:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 88,
                    "indexExpression": {
                      "id": 87,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1271:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1253:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 75,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1246:32:0"
                }
              ]
            },
            "documentation": {
              "id": 69,
              "nodeType": "StructuredDocumentation",
              "src": "764:325:0",
              "text": "@notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
            },
            "functionSelector": "70a08231",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1104:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1122:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1114:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:16:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1152:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:9:0"
            },
            "scope": 119,
            "src": "1095:191:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "1626:154:0",
              "statements": [
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1645:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "1637:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1637:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104,
                  "initialValue": {
                    "baseExpression": {
                      "id": 101,
                      "name": "_tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1653:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 103,
                    "indexExpression": {
                      "id": 102,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1665:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1653:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1637:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 106,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1693:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1710:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1702:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 107,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1702:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1702:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1693:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726f77696e6720796f75206675636b696e67206f75742c206d6174652032",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1714:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be4f4ab89f5275c38d0357877e2ec277bcf64481192cac745844ff1050a30df",
                          "typeString": "literal_string \"throwing you fucking out, mate 2\""
                        },
                        "value": "throwing you fucking out, mate 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be4f4ab89f5275c38d0357877e2ec277bcf64481192cac745844ff1050a30df",
                          "typeString": "literal_string \"throwing you fucking out, mate 2\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1685:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:64:0"
                },
                {
                  "expression": {
                    "id": 115,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100,
                    "src": "1767:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 116,
                  "nodeType": "Return",
                  "src": "1760:12:0"
                }
              ]
            },
            "documentation": {
              "id": 92,
              "nodeType": "StructuredDocumentation",
              "src": "1298:253:0",
              "text": "@notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
            },
            "functionSelector": "6352211e",
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1568:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1584:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1576:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:18:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1617:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1616:9:0"
            },
            "scope": 119,
            "src": "1559:221:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 120,
        "src": "61:1726:0",
        "usedErrors": [],
        "usedEvents": [
          9
        ]
      }
    ],
    "src": "34:1757:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-07-29T09:04:29.754Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "params": {
          "_owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of NFTs owned by `_owner`, possibly zero"
        }
      },
      "ownerOf(uint256)": {
        "details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT"
        },
        "returns": {
          "_0": "The address of the owner of the NFT"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Count all NFTs assigned to an owner"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an NFT"
      }
    },
    "version": 1
  }
}